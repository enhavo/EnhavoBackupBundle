parameters:
    enhavo_backup_api_key: '%env(BACKUP_API_KEY)%'

services:
    Enhavo\Bundle\BackupBundle\Backup\BackupManager:
        arguments:
            - '@Enhavo\Component\Type\FactoryInterface[BackupSource]'
            - '@Enhavo\Component\Type\FactoryInterface[BackupNormalizer]'
            - '@Enhavo\Component\Type\FactoryInterface[BackupStorage]'
            - '@Enhavo\Component\Type\FactoryInterface[BackupNotification]'
            - '@Enhavo\Bundle\BackupBundle\Utility\FileHelper'
            - '%enhavo_backup.backups%'
            - '@Enhavo\Bundle\MediaBundle\Factory\FileFactory'

    Enhavo\Bundle\BackupBundle\Utility\FileHelper:
        arguments:
            - '@filesystem'
            - '@kernel'
            - '%enhavo_backup.tmp_dir%'

    Enhavo\Bundle\BackupBundle\Command\BackupCommand:
        arguments:
            - '@Enhavo\Bundle\BackupBundle\Backup\BackupManager'
        tags:
            - { name: 'console.command' }

    Enhavo\Bundle\BackupBundle\Menu\BackupMenu:
        parent: Enhavo\Bundle\AppBundle\Menu\Menu\BaseMenu
        tags:
            - { name: enhavo.menu, alias: backup_backup }

    Enhavo\Bundle\BackupBundle\Controller\DownloadController:
        arguments:
            - '@Enhavo\Bundle\BackupBundle\Backup\BackupManager'
            - '@enhavo_backup.repository.backup_file'
            - '@Enhavo\Bundle\BackupBundle\Utility\FileHelper'
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: controller.service_arguments }
            - { name: container.service_subscriber }


    Enhavo\Bundle\BackupBundle\Controller\BackupController:
        arguments:
            - '%enhavo_backup_api_key%'
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: controller.service_arguments }
            - { name: container.service_subscriber }
